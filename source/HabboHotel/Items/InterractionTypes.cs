using System;
namespace Cyber.HabboHotel.Items
{
	internal class InterractionTypes
	{
		internal static InteractionType GetTypeFromString(string pType)
		{
			switch (pType)
			{
			case "":
			case "default":
				return InteractionType.none;
			case "gate":
				return InteractionType.gate;
			case "postit":
				return InteractionType.postit;
			case "roomeffect":
				return InteractionType.roomeffect;
			case "dimmer":
				return InteractionType.dimmer;
			case "trophy":
				return InteractionType.trophy;
			case "bed":
				return InteractionType.bed;
			case "scoreboard":
				return InteractionType.scoreboard;
			case "vendingmachine":
				return InteractionType.vendingmachine;
			case "alert":
				return InteractionType.alert;
			case "onewaygate":
				return InteractionType.onewaygate;
			case "loveshuffler":
				return InteractionType.loveshuffler;
			case "habbowheel":
				return InteractionType.habbowheel;
			case "dice":
				return InteractionType.dice;
			case "hopper":
				return InteractionType.hopper;
			case "bottle":
				return InteractionType.bottle;
			case "teleport":
				return InteractionType.teleport;
			case "rentals":
				return InteractionType.rentals;
			case "pet":
				return InteractionType.pet;
			case "pool":
				return InteractionType.pool;
			case "roller":
				return InteractionType.roller;
			case "fbgate":
				return InteractionType.fbgate;
			case "pet0":
				return InteractionType.pet0;
			case "pet1":
				return InteractionType.pet1;
			case "pet2":
				return InteractionType.pet2;
			case "pet3":
				return InteractionType.pet3;
			case "pet4":
				return InteractionType.pet4;
			case "pet5":
				return InteractionType.pet5;
			case "pet6":
				return InteractionType.pet6;
			case "pet7":
				return InteractionType.pet7;
			case "pet8":
				return InteractionType.pet8;
			case "pet9":
				return InteractionType.pet9;
			case "pet10":
				return InteractionType.pet10;
			case "pet11":
				return InteractionType.pet11;
			case "pet12":
				return InteractionType.pet12;
			case "pet13":
				return InteractionType.pet13;
			case "pet14":
				return InteractionType.pet14;
			case "pet15":
				return InteractionType.pet15;
			case "pet16":
				return InteractionType.pet16;
			case "pet17":
				return InteractionType.pet17;
			case "pet18":
				return InteractionType.pet18;
			case "pet19":
				return InteractionType.pet19;
			case "pet20":
				return InteractionType.pet20;
			case "pet21":
				return InteractionType.pet21;
			case "pet22":
				return InteractionType.pet22;
			case "pet23":
				return InteractionType.pet23;
			case "pet24":
				return InteractionType.pet24;
			case "pet25":
				return InteractionType.pet25;
			case "pet26":
				return InteractionType.pet26;
			case "iceskates":
				return InteractionType.iceskates;
			case "rollerskate":
				return InteractionType.normslaskates;
			case "lowpool":
				return InteractionType.lowpool;
			case "haloweenpool":
                case "halloweenpool":
				return InteractionType.haloweenpool;
                case "snowboardslope":
                return InteractionType.snowboardslope;
			case "ball":
			case "football":
				return InteractionType.football;
			case "jump":
				return InteractionType.jump;
			case "green_goal":
				return InteractionType.footballgoalgreen;
			case "yellow_goal":
				return InteractionType.footballgoalyellow;
			case "red_goal":
				return InteractionType.footballgoalred;
			case "blue_goal":
				return InteractionType.footballgoalblue;
			case "green_score":
				return InteractionType.footballcountergreen;
			case "yellow_score":
				return InteractionType.footballcounteryellow;
			case "blue_score":
				return InteractionType.footballcounterblue;
			case "red_score":
				return InteractionType.footballcounterred;
			case "bb_blue_gate":
				return InteractionType.banzaigateblue;
			case "bb_red_gate":
				return InteractionType.banzaigatered;
			case "bb_yellow_gate":
				return InteractionType.banzaigateyellow;
			case "bb_green_gate":
				return InteractionType.banzaigategreen;
			case "bb_patch":
				return InteractionType.banzaifloor;
			case "bb_blue_score":
				return InteractionType.banzaiscoreblue;
			case "bb_red_score":
				return InteractionType.banzaiscorered;
			case "bb_yellow_score":
				return InteractionType.banzaiscoreyellow;
			case "bb_green_score":
				return InteractionType.banzaiscoregreen;
			case "banzaicounter":
				return InteractionType.banzaicounter;
			case "bb_teleport":
				return InteractionType.banzaitele;
			case "banzaipuck":
				return InteractionType.banzaipuck;
			case "bb_pyramid":
				return InteractionType.banzaipyramid;
			case "freezetimer":
				return InteractionType.freezetimer;
			case "freezeexit":
				return InteractionType.freezeexit;
			case "freezeredcounter":
				return InteractionType.freezeredcounter;
			case "freezebluecounter":
				return InteractionType.freezebluecounter;
			case "freezeyellowcounter":
				return InteractionType.freezeyellowcounter;
			case "freezegreencounter":
				return InteractionType.freezegreencounter;
			case "freezeyellowgate":
				return InteractionType.freezeyellowgate;
			case "freezeredgate":
				return InteractionType.freezeredgate;
			case "freezegreengate":
				return InteractionType.freezegreengate;
			case "freezebluegate":
				return InteractionType.freezebluegate;
			case "freezetileblock":
				return InteractionType.freezetileblock;
			case "freezetile":
				return InteractionType.freezetile;
			case "jukebox":
				return InteractionType.jukebox;
			case "musicdisc":
				return InteractionType.musicdisc;
			case "wf_trg_attime":
				return InteractionType.triggertimer;
			case "wf_trg_enterroom":
				return InteractionType.triggerroomenter;
			case "wf_trg_gameend":
				return InteractionType.triggergameend;
			case "wf_trg_gamestart":
				return InteractionType.triggergamestart;
			case "wf_trg_timer":
				return InteractionType.triggerrepeater;
            case "wf_trg_period_long":
                return InteractionType.triggerlongrepeater;
			case "wf_trg_onsay":
				return InteractionType.triggeronusersay;
			case "wf_trg_atscore":
				return InteractionType.triggerscoreachieved;
			case "wf_trg_furnistate":
				return InteractionType.triggerstatechanged;
			case "wf_trg_onfurni":
				return InteractionType.triggerwalkonfurni;
			case "wf_trg_offfurni":
				return InteractionType.triggerwalkofffurni;
			case "wf_act_givepoints":
				return InteractionType.actiongivescore;
			case "wf_act_matchfurni":
				return InteractionType.actionposreset;
			case "wf_act_moverotate":
				return InteractionType.actionmoverotate;
			case "actionresettimer":
				return InteractionType.actionresettimer;
			case "wf_act_saymsg":
				return InteractionType.actionshowmessage;
			case "wf_act_moveuser":
				return InteractionType.actionteleportto;
			case "wf_act_togglefurni":
				return InteractionType.actiontogglestate;
			case "wf_act_kick_user":
				return InteractionType.actionkickuser;
			case "wf_act_give_reward":
				return InteractionType.actiongivereward;
			case "wf_cnd_furnis_hv_avtrs":
				return InteractionType.conditionfurnishaveusers;
			case "conditionstatepos":
				return InteractionType.conditionstatepos;
			case "conditiontimelessthan":
				return InteractionType.conditiontimelessthan;
			case "conditiontimemorethan":
				return InteractionType.conditiontimemorethan;
			case "conditiontriggeronfurni":
				return InteractionType.conditiontriggeronfurni;
			case "conditionfurnihasfurni":
				return InteractionType.conditionfurnihasfurni;
			case "pressure_pad":
				return InteractionType.pressurepad;
			case "colorwheel":
				return InteractionType.colorwheel;
			case "switch":
				return InteractionType.floorswitch1;
			case "floorswitch2":
				return InteractionType.floorswitch2;
			case "firegate":
				return InteractionType.firegate;
			case "glassfoor":
				return InteractionType.glassfoor;
			case "specialrandom":
				return InteractionType.specialrandom;
			case "specialunseen":
				return InteractionType.specialunseen;
			case "wire":
				return InteractionType.wire;
			case "wireCenter":
				return InteractionType.wireCenter;
			case "wireCorner":
				return InteractionType.wireCorner;
			case "wireSplitter":
				return InteractionType.wireSplitter;
			case "wireStandard":
				return InteractionType.wireStandard;
			case "puzzlebox":
				return InteractionType.puzzlebox;
			case "water":
				return InteractionType.pool;
			case "gift":
				return InteractionType.gift;
			case "background":
				return InteractionType.background;
			case "mannequin":
				return InteractionType.mannequin;
			case "vip_gate":
				return InteractionType.vip_gate;
			case "roombg":
				return InteractionType.roombg;
			case "mystery_box":
				return InteractionType.mystery_box;
			case "wear_item":
				return InteractionType.wearitem;
			case "gld_item":
				return InteractionType.gld_item;
			case "gld_gate":
				return InteractionType.gld_gate;
			case "badge_display":
				return InteractionType.badge_display;
			case "pinata":
				return InteractionType.pinata;
			case "tilestackmagic":
				return InteractionType.tilestackmagic;
			case "tent":
				return InteractionType.tent;
			case "bedtent":
				return InteractionType.bedtent;
			case "poster":
				return InteractionType.poster;
			case "runwaysage":
				return InteractionType.runwaysage;
			case "shower":
				return InteractionType.shower;
			case "youtubetv":
				return InteractionType.youtubetv;
			case "moplaseed":
				return InteractionType.moplaseed;
			case "fireworks":
				return InteractionType.fireworks;
			case "groupforumterminal":
				return InteractionType.groupforumterminal;
			case "vikingcotie":
				return InteractionType.vikingcotie;
                case "cannon":
                return InteractionType.cannon;

                case "petball":
                return InteractionType.petball;
                case "petnest":
                return InteractionType.petnest;
                case "petfood":
                return InteractionType.petfood;
                case "petdrink":
                return InteractionType.petdrink;
                case "wf_cnd_match_snapshot":
                return InteractionType.conditionitemsmatches;
                case "wf_cnd_actor_in_group":
                return InteractionType.conditiongroupmember;
                case "wf_cnd_stuff_is":
                return InteractionType.conditionfurnitypematches;
                case "wf_cnd_user_count_in":
                return InteractionType.conditionhowmanyusersinroom;
                case "wf_cnd_not_match_snap":
                return InteractionType.conditionitemsdontmatch;
                case "wf_cnd_not_stuff_is":
                return InteractionType.conditionfurnitypedontmatch;
                case "wf_cnd_not_in_group":
                return InteractionType.conditionnotgroupmember;
                case "wf_cnd_not_user_count":
                return InteractionType.conditionnegativehowmanyusers;
                case "wf_cnd_not_hv_avtrs":
                return InteractionType.conditionfurnishavenotusers;
                case "wf_cnd_not_furni_on":
                return InteractionType.conditionfurnihasnotfurni;
                case "wf_cnd_not_trggrer_on":
                return InteractionType.conditiontriggerernotonfurni;
                case "wf_act_mute_triggerer":
                return InteractionType.actionmuteuser;
                case "wf_cnd_wearing_effect":
                return InteractionType.conditionuserwearingeffect;
                case "wf_cnd_not_wearing_fx":
                return InteractionType.conditionusernotwearingeffect;
                case "wf_cnd_wearing_badge":
                return InteractionType.conditionuserwearingbadge;
                case "wf_cnd_not_wearing_b":
                return InteractionType.conditionusernotwearingbadge;
                case "wf_cnd_date_rng_active":
                return InteractionType.conditiondaterangeactive; //24
			}
			return InteractionType.none;
		}
	}
}
